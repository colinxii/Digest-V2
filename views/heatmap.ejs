<%
// Configuration
const daysOfWeek = ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"];
const monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

// Create a map for quick lookup of appointment counts by date
const appointmentMap = {};
appointmentData.forEach(item => {
const dateKey = `${item.Year}-${item.Month}-${item.Day}`;
  appointmentMap[dateKey] = item.Count;
});

// Calculate statistics using utility function
const { totalAppointments, maxCount } = calculateAppointmentStats(appointmentData);

// Define color thresholds with fixed ranges
const colorThresholds = [
  { max: 0, color: "#ECECEC", label: "0" },
  { max: 1, color: "#C6E48B", label: "1" },
  { max: 2, color: "#7BC96F", label: "2" },
  { max: 3, color: "#239A3B", label: "3" },
  { max: Infinity, color: "#196127", label: "4+" }
];

// Helper function to get color based on count
const getColorForCount = (count) => {
  if (!count) return colorThresholds[0].color;
  for (let i = 1; i < colorThresholds.length; i++) {
    if (count <= colorThresholds[i].max) {
      return colorThresholds[i].color;
    }
  }
  return colorThresholds[colorThresholds.length - 1].color;
};

// Calculate date ranges
const today = new Date();
const endDate = new Date(today);
const startDate = new Date(today);
startDate.setDate(today.getDate() - 364);

// Adjust to start of week
const dayOfWeek = startDate.getDay();
const adjustedStartDay = dayOfWeek === 0 ? 6 : dayOfWeek - 1;
startDate.setDate(startDate.getDate() - adjustedStartDay);

// Calculate weeks needed
const totalDays = Math.ceil((endDate - startDate) / (24 * 60 * 60 * 1000)) + adjustedStartDay;
const numWeeks = Math.ceil(totalDays / 7);

// Prepare weeks data
const weeksData = [];
const daysWithAppointments = Array(7).fill(false);

// Generate weeks data
for (let weekIndex = 0; weekIndex < numWeeks; weekIndex++) {
  const weekData = { days: [], hasMonth: false, monthName: "" };
  
  for (let dayIndex = 0; dayIndex < 7; dayIndex++) {
    const currentDate = new Date(startDate);
    currentDate.setDate(startDate.getDate() + (weekIndex * 7) + dayIndex);
    
    if (currentDate.getDate() === 1) {
      weekData.hasMonth = true;
      weekData.monthName = monthNames[currentDate.getMonth()];
    }
    
    const isWithinRange = currentDate >= startDate && currentDate <= endDate;
    
    if (isWithinRange) {
      const year = currentDate.getFullYear();
      const month = currentDate.getMonth() + 1;
      const day = currentDate.getDate();
      const dateKey = `${year}-${month}-${day}`;
      const count = appointmentMap[dateKey] || 0;
      
      if (count > 0) daysWithAppointments[dayIndex] = true;
      
      weekData.days.push({
        date: currentDate,
        day: day,
        month: month,
        year: year,
        count: count,
        color: getColorForCount(count),
        isWithinRange: true
      });
    } else {
      weekData.days.push({
        isWithinRange: false,
        color: "#FFFFFF"
      });
    }
  }
  weeksData.push(weekData);
}

// Get active days
const activeDaysIndices = daysWithAppointments
  .map((hasAppointments, index) => hasAppointments ? index : -1)
  .filter(index => index !== -1);
const activeDays = activeDaysIndices.map(index => daysOfWeek[index]);
%>

<!-- HEADER SECTION -->
<%
// Calculate appointment statistics for bento boxes
// Reuse existing 'today' variable declared above
const bentoCurrentMonth = today.getMonth() + 1;
const bentoCurrentYear = today.getFullYear();

// Helper function to get quarter from month
function getQuarter(month) {
  return Math.ceil(month / 3);
}

const currentQuarter = getQuarter(bentoCurrentMonth);

// Calculate last month and last quarter
const lastMonth = bentoCurrentMonth === 1 ? 12 : bentoCurrentMonth - 1;
const lastMonthYear = bentoCurrentMonth === 1 ? bentoCurrentYear - 1 : bentoCurrentYear;
const lastQuarter = currentQuarter === 1 ? 4 : currentQuarter - 1;
const lastQuarterYear = currentQuarter === 1 ? bentoCurrentYear - 1 : bentoCurrentYear;

// Calculate this month's appointments
let thisMonthAppointments = 0;
appointmentData.forEach(item => {
  if (item.Year === bentoCurrentYear && item.Month === bentoCurrentMonth) {
    thisMonthAppointments += item.Count;
  }
});

// Calculate this quarter's appointments
let thisQuarterAppointments = 0;
appointmentData.forEach(item => {
  if (item.Year === bentoCurrentYear && getQuarter(item.Month) === currentQuarter) {
    thisQuarterAppointments += item.Count;
  }
});

// Calculate year-to-date appointments
let yearToDateAppointments = 0;
appointmentData.forEach(item => {
  if (item.Year === bentoCurrentYear) {
    const itemDate = new Date(item.Year, item.Month - 1, item.Day);
    if (itemDate <= today) {
      yearToDateAppointments += item.Count;
    }
  }
});

// Calculate last month's appointments
let lastMonthAppointments = 0;
appointmentData.forEach(item => {
  if (item.Year === lastMonthYear && item.Month === lastMonth) {
    lastMonthAppointments += item.Count;
  }
});

// Calculate last quarter's appointments
let lastQuarterAppointments = 0;
appointmentData.forEach(item => {
  if (item.Year === lastQuarterYear && getQuarter(item.Month) === lastQuarter) {
    lastQuarterAppointments += item.Count;
  }
});

// Format numbers with commas
function formatNumber(num) {
  return num.toLocaleString('en-US');
}
%>

<!-- Bento Box Header -->
<table role="presentation" cellpadding="0" cellspacing="2" border="0" width="100%" style="width: 100%; margin-bottom: 20px; border-spacing: 1px;">
  <!-- Row 1: Title Header -->
  <tr>
    <td colspan="7" style="padding: 0 0 10px 0;">
      <div style="border: 1px solid #cccccc; background-color: #ECECEC; border-radius: 10px; padding: 15px; text-align: center;">
        <!--[if mso]>
        <table role="presentation" cellpadding="0" cellspacing="2" border="0" width="100%">
          <tr>
            <td bgcolor="#ECECEC" style="border: 1px solid #cccccc; padding: 15px; text-align: center;">
        <![endif]-->
        <div style="font-weight: bold; font-size: 18px; color: #333333; line-height: 1.2;">APPOINTMENTS</div>
        <div style="font-size: 12px; color: #666666; margin-top: 2px; line-height: 1.2;">(LAST 365 DAYS)</div>
        <!--[if mso]>
            </td>
          </tr>
        </table>
        <![endif]-->
      </div>
    </td>
  </tr>
  
  <!-- Row 2: Current Period Metrics -->
  <tr>
    <!-- Total Appointments -->
    <td width="14.28%" style="width: 14.28%; padding: 0 5px 10px 0; vertical-align: top;">
      <div style="border: 1px solid #cccccc; background-color: #ffffff; border-radius: 10px; padding: 10px; text-align: center; min-height: 50px;">
        <!--[if mso]>
        <table role="presentation" cellpadding="0" cellspacing="2" border="0" width="100%" height="50">
          <tr>
            <td bgcolor="#ffffff" style="border: 1px solid #cccccc; padding: 10px; text-align: center; vertical-align: middle;">
        <![endif]-->
        <div style="font-size: 12px; color: #666666; margin-bottom: 2px; line-height: 1.2;">TOTAL</div>
        <div style="font-weight: bold; font-size: 16px; color: #333333; line-height: 1.2;"><%= formatNumber(totalAppointments) %></div>
        <!--[if mso]>
            </td>
          </tr>
        </table>
        <![endif]-->
      </div>
    </td>
    
    <!-- Year to Date -->
    <td width="14.28%" style="width: 14.28%; padding: 0 5px 10px 5px; vertical-align: top;">
      <div style="border: 1px solid #cccccc; background-color: #ffffff; border-radius: 10px; padding: 10px; text-align: center; min-height: 50px;">
        <!--[if mso]>
        <table role="presentation" cellpadding="0" cellspacing="2" border="0" width="100%" height="50">
          <tr>
            <td bgcolor="#ffffff" style="border: 1px solid #cccccc; padding: 10px; text-align: center; vertical-align: middle;">
        <![endif]-->
        <div style="font-size: 12px; color: #666666; margin-bottom: 2px; line-height: 1.2;">YEAR TO DATE</div>
        <div style="font-weight: bold; font-size: 16px; color: #333333; line-height: 1.2;"><%= formatNumber(yearToDateAppointments) %></div>
        <!--[if mso]>
            </td>
          </tr>
        </table>
        <![endif]-->
      </div>
    </td>
    
    <!-- Last Quarter -->
    <td width="14.28%" style="width: 14.28%; padding: 0 5px 10px 5px; vertical-align: top;">
      <div style="border: 1px solid #cccccc; background-color: #ffffff; border-radius: 10px; padding: 10px; text-align: center; min-height: 50px;">
        <!--[if mso]>
        <table role="presentation" cellpadding="0" cellspacing="2" border="0" width="100%" height="50">
          <tr>
            <td bgcolor="#ffffff" style="border: 1px solid #cccccc; padding: 10px; text-align: center; vertical-align: middle;">
        <![endif]-->
        <div style="font-size: 12px; color: #666666; margin-bottom: 2px; line-height: 1.2;">LAST QUARTER</div>
        <div style="font-weight: bold; font-size: 16px; color: #333333; line-height: 1.2;"><%= formatNumber(lastQuarterAppointments) %></div>
        <!--[if mso]>
            </td>
          </tr>
        </table>
        <![endif]-->
      </div>
    </td>

    <!-- This Quarter -->
    <td width="14.28%" style="width: 14.28%; padding: 0 5px 10px 5px; vertical-align: top;">
      <div style="border: 1px solid #cccccc; background-color: #ffffff; border-radius: 10px; padding: 10px; text-align: center; min-height: 50px;">
        <!--[if mso]>
        <table role="presentation" cellpadding="0" cellspacing="2" border="0" width="100%" height="50">
          <tr>
            <td bgcolor="#ffffff" style="border: 1px solid #cccccc; padding: 10px; text-align: center; vertical-align: middle;">
        <![endif]-->
        <div style="font-size: 12px; color: #666666; margin-bottom: 2px; line-height: 1.2;">THIS QUARTER</div>
        <div style="font-weight: bold; font-size: 16px; color: #333333; line-height: 1.2;"><%= formatNumber(thisQuarterAppointments) %></div>
        <!--[if mso]>
            </td>
          </tr>
        </table>
        <![endif]-->
      </div>
    </td>

    <!-- Last Month -->
    <td width="14.28%" style="width: 14.28%; padding: 0 5px 10px 5px; vertical-align: top;">
      <div style="border: 1px solid #cccccc; background-color: #ffffff; border-radius: 10px; padding: 10px; text-align: center; min-height: 50px;">
        <!--[if mso]>
        <table role="presentation" cellpadding="0" cellspacing="2" border="0" width="100%" height="50">
          <tr>
            <td bgcolor="#ffffff" style="border: 1px solid #cccccc; padding: 10px; text-align: center; vertical-align: middle;">
        <![endif]-->
        <div style="font-size: 12px; color: #666666; margin-bottom: 2px; line-height: 1.2;">LAST MONTH</div>
        <div style="font-weight: bold; font-size: 16px; color: #333333; line-height: 1.2;"><%= formatNumber(lastMonthAppointments) %></div>
        <!--[if mso]>
            </td>
          </tr>
        </table>
        <![endif]-->
      </div>
    </td>
    
    <!-- This Month -->
    <td width="14.28%" style="width: 14.28%; padding: 0 5px 10px 5px; vertical-align: top;">
      <div style="border: 1px solid #cccccc; background-color: #ffffff; border-radius: 10px; padding: 10px; text-align: center; min-height: 50px;">
        <!--[if mso]>
        <table role="presentation" cellpadding="0" cellspacing="2" border="0" width="100%" height="50">
          <tr>
            <td bgcolor="#ffffff" style="border: 1px solid #cccccc; padding: 10px; text-align: center; vertical-align: middle;">
        <![endif]-->
        <div style="font-size: 12px; color: #666666; margin-bottom: 2px; line-height: 1.2;">THIS MONTH</div>
        <div style="font-weight: bold; font-size: 16px; color: #333333; line-height: 1.2;"><%= formatNumber(thisMonthAppointments) %></div>
        <!--[if mso]>
            </td>
          </tr>
        </table>
        <![endif]-->
      </div>
    </td>
     
    <!-- Most in One Day -->
    <td width="14.28%" style="width: 14.28%; padding: 0 0 10px 5px; vertical-align: top;">
      <div style="border: 1px solid #cccccc; background-color: #ffffff; border-radius: 10px; padding: 10px; text-align: center; min-height: 50px;">
        <!--[if mso]>
        <table role="presentation" cellpadding="0" cellspacing="2" border="0" width="100%" height="50">
          <tr>
            <td bgcolor="#ffffff" style="border: 1px solid #cccccc; padding: 10px; text-align: center; vertical-align: middle;">
        <![endif]-->
        <div style="font-size: 12px; color: #666666; margin-bottom: 2px; line-height: 1.2;">MOST IN ONE DAY</div>
        <div style="font-weight: bold; font-size: 16px; color: #333333; line-height: 1.2;"><%= formatNumber(maxCount) %></div>
        <!--[if mso]>
            </td>
          </tr>
        </table>
        <![endif]-->
      </div>
    </td>
  </tr>
</table>

<!-- Heatmap Grid -->
<% if (activeDays.length === 0) { %>
  <div style="padding: 20px; text-align: center; color: #666666;">No appointments found in the specified date range.</div>
<% } else { %>
  <table class="heatmap" role="presentation" cellpadding="10" cellspacing="4" border="0" width="100%" style="width: 100%; margin-bottom: 15px;">
    <!-- Month labels -->
    <tr>
      <td width="30" style="width: 30px;"></td>
      <% 
      // Calculate month spans
      let monthSpans = [];
      let currentMonth = null;
      let monthStartCol = 0;
      let colIndex = 0;
      
      weeksData.forEach((week, weekIndex) => {
        const firstDayOfWeek = week.days.find(day => day.isWithinRange);
        if (firstDayOfWeek) {
          const weekMonth = firstDayOfWeek.date.getMonth();
          if (currentMonth === null || currentMonth !== weekMonth) {
            if (currentMonth !== null) {
              monthSpans.push({
                name: monthNames[currentMonth],
                colspan: colIndex - monthStartCol
              });
            }
            currentMonth = weekMonth;
            monthStartCol = colIndex;
          }
        }
        colIndex++;
      });
      
      // Add the last month
      if (currentMonth !== null) {
        monthSpans.push({
          name: monthNames[currentMonth],
          colspan: colIndex - monthStartCol
        });
      }
      
      // Render month labels
      monthSpans.forEach(month => { %>
        <td colspan="<%= month.colspan %>" style="text-align: left; font-size: 12px; padding-left: 5px; color: #333333;">
          <%= month.name %>
        </td>
      <% }); %>
    </tr>
    
    <!-- Heatmap rows -->
    <% for (let i = 0; i < activeDaysIndices.length; i++) {
      const dayIndex = activeDaysIndices[i]; %>
      <tr>
        <td width="30" style="width: 30px; text-align: right; padding-right: 5px; font-size: 12px; color: #333333;">
          <%= daysOfWeek[dayIndex] %>
        </td>
        <% for (let j = 0; j < weeksData.length; j++) {
          const day = weeksData[j].days[dayIndex];
          if (day && day.isWithinRange) { 
            const tooltipText = `${monthNames[day.month-1]} ${day.day}, ${day.year}: ${day.count} appointment${day.count !== 1 ? 's' : ''}`;
          %>
            <td width="11" height="20" bgcolor="<%= day.color %>" style="width: 11px; height: 20px; padding: 0; margin: 0; font-size: 1px; line-height: 1px;" title="<%= tooltipText %>">
              <!--[if mso]>
              <v:rect xmlns:v="urn:schemas-microsoft-com:vml" stroked="false" style="width:11px;height:20px;display:inline-block;">
                <v:fill type="solid" color="<%= day.color %>"/>
              </v:rect>
              <![endif]-->
              <!--[if !mso]><!-->
              <div style="width: 11px; height: 20px; background-color: <%= day.color %>; font-size: 1px; line-height: 1px;">&nbsp;</div>
              <!--<![endif]-->
            </td>
          <% } else { %>
            <td width="11" height="20" bgcolor="#FFFFFF" style="width: 11px; height: 20px; padding: 0; margin: 0; font-size: 1px; line-height: 1px;">
              <div style="width: 11px; height: 20px; font-size: 1px; line-height: 1px;">&nbsp;</div>
            </td>
          <% }
        } %>
      </tr>
    <% } %>
  </table>
  
  <!-- Color legend -->
  <table role="presentation" cellpadding="0" cellspacing="2" border="0" style="margin-top: 15px; ">
    <tr>
      <td style="font-size: 11px; padding-right: 5px; color: #666666;">Less (<%= colorThresholds[0].label %>)</td>
      <% colorThresholds.forEach(threshold => { %>
        <td width="11" height="20" bgcolor="<%= threshold.color %>" style="width: 11px; height: 20px; padding: 0 2px;">
          <!--[if mso]>
          <v:rect xmlns:v="urn:schemas-microsoft-com:vml" stroked="false" style="width:11px;height:20px;display:inline-block;">
            <v:fill type="solid" color="<%= threshold.color %>"/>
          </v:rect>
          <![endif]-->
          <!--[if !mso]><!-->
          <div style="width: 11px; height: 20px; background-color: <%= threshold.color %>; font-size: 1px; line-height: 1px;">&nbsp;</div>
          <!--<![endif]-->
        </td>
      <% }); %>
      <td style="font-size: 11px; padding-left: 5px; color: #666666;">More (<%= colorThresholds[4].label %>)</td>
    </tr>
  </table>
<% } %>
